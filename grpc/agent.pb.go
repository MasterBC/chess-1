// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	agent.proto
	auth.proto
	centre.proto
	game.proto
	room.proto

It has these top-level messages:
	AutoId
	SeedInfo
	BaseAck
	BaseReq
	UserLoginReq
	UserLoginAck
	KickedOutAck
	RoomSetTableReq
	RoomSetTableAck
	RoomGetTableReq
	RoomGetTableAck
	RoomGetPlayerReq
	RoomGetPlayerAck
	RoomPlayerJoinReq
	RoomPlayerJoinAck
	RoomPlayerGoneReq
	RoomPlayerGoneAck
	RoomPlayerBetReq
	RoomPlayerBetAck
	RoomButtonAck
	RoomDealAck
	RoomPotAck
	RoomActionAck
	RoomShowdownAck
	RoomPlayerStandupReq
	RoomPlayerStandupAck
	RoomPlayerSitdownReq
	RoomPlayerSitdownAck
	RoomPlayerChangeTableReq
	RoomShutdownTableAck
	RoomPlayerLogoutReq
	RoomPlayerReconnectAck
	PotInfo
	TableInfo
	CardInfo
	PlayerInfo
	AuthArgs
	AuthRes
	TokenInfoArgs
	TokenInfoRes
	RefreshTokenArgs
	RefreshTokenRes
	DestroyTokenArgs
	DestroyTokenRes
	BlackTokenArgs
	BlackTokenRes
	GameListArgs
	GameListRes
	GamePlaygroundArgs
	GamePlaygroundRes
	Room
	RoomInfoArgs
	RoomInfoRes
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// 0,1 心跳包
type AutoId struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *AutoId) Reset()                    { *m = AutoId{} }
func (m *AutoId) String() string            { return proto1.CompactTextString(m) }
func (*AutoId) ProtoMessage()               {}
func (*AutoId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AutoId) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 30,31 通信加密种子
type SeedInfo struct {
	ClientSendSeed    int32 `protobuf:"varint,1,opt,name=client_send_seed,json=clientSendSeed" json:"client_send_seed,omitempty"`
	ClientReceiveSeed int32 `protobuf:"varint,2,opt,name=client_receive_seed,json=clientReceiveSeed" json:"client_receive_seed,omitempty"`
}

func (m *SeedInfo) Reset()                    { *m = SeedInfo{} }
func (m *SeedInfo) String() string            { return proto1.CompactTextString(m) }
func (*SeedInfo) ProtoMessage()               {}
func (*SeedInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SeedInfo) GetClientSendSeed() int32 {
	if m != nil {
		return m.ClientSendSeed
	}
	return 0
}

func (m *SeedInfo) GetClientReceiveSeed() int32 {
	if m != nil {
		return m.ClientReceiveSeed
	}
	return 0
}

// 一般性回复payload
type BaseAck struct {
	Ret int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *BaseAck) Reset()                    { *m = BaseAck{} }
func (m *BaseAck) String() string            { return proto1.CompactTextString(m) }
func (*BaseAck) ProtoMessage()               {}
func (*BaseAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BaseAck) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *BaseAck) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// 一般性请求payload
type BaseReq struct {
	AppFrom    string `protobuf:"bytes,1,opt,name=app_from,json=appFrom" json:"app_from,omitempty"`
	AppVer     int32  `protobuf:"varint,2,opt,name=app_ver,json=appVer" json:"app_ver,omitempty"`
	AppChannel string `protobuf:"bytes,3,opt,name=app_channel,json=appChannel" json:"app_channel,omitempty"`
}

func (m *BaseReq) Reset()                    { *m = BaseReq{} }
func (m *BaseReq) String() string            { return proto1.CompactTextString(m) }
func (*BaseReq) ProtoMessage()               {}
func (*BaseReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BaseReq) GetAppFrom() string {
	if m != nil {
		return m.AppFrom
	}
	return ""
}

func (m *BaseReq) GetAppVer() int32 {
	if m != nil {
		return m.AppVer
	}
	return 0
}

func (m *BaseReq) GetAppChannel() string {
	if m != nil {
		return m.AppChannel
	}
	return ""
}

// 10, 用户登录
type UserLoginReq struct {
	BaseReq     *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	UserId      int32    `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UniqueId    string   `protobuf:"bytes,3,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	Token       string   `protobuf:"bytes,4,opt,name=token" json:"token,omitempty"`
	ConnectTo   string   `protobuf:"bytes,5,opt,name=connect_to,json=connectTo" json:"connect_to,omitempty"`
	IsReconnect int32    `protobuf:"varint,6,opt,name=is_reconnect,json=isReconnect" json:"is_reconnect,omitempty"`
}

func (m *UserLoginReq) Reset()                    { *m = UserLoginReq{} }
func (m *UserLoginReq) String() string            { return proto1.CompactTextString(m) }
func (*UserLoginReq) ProtoMessage()               {}
func (*UserLoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserLoginReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *UserLoginReq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserLoginReq) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *UserLoginReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserLoginReq) GetConnectTo() string {
	if m != nil {
		return m.ConnectTo
	}
	return ""
}

func (m *UserLoginReq) GetIsReconnect() int32 {
	if m != nil {
		return m.IsReconnect
	}
	return 0
}

// 11, 用户登录回复
type UserLoginAck struct {
	BaseAck   *BaseAck `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	ServiceId string   `protobuf:"bytes,2,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
}

func (m *UserLoginAck) Reset()                    { *m = UserLoginAck{} }
func (m *UserLoginAck) String() string            { return proto1.CompactTextString(m) }
func (*UserLoginAck) ProtoMessage()               {}
func (*UserLoginAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserLoginAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *UserLoginAck) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

// 40, 用户踢出通知
type KickedOutAck struct {
	BaseAck *BaseAck `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
}

func (m *KickedOutAck) Reset()                    { *m = KickedOutAck{} }
func (m *KickedOutAck) String() string            { return proto1.CompactTextString(m) }
func (*KickedOutAck) ProtoMessage()               {}
func (*KickedOutAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *KickedOutAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

// 2003, 创建牌桌
type RoomSetTableReq struct {
	BaseReq    *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	SmallBlind int32    `protobuf:"varint,2,opt,name=small_blind,json=smallBlind" json:"small_blind,omitempty"`
	BigBlind   int32    `protobuf:"varint,3,opt,name=big_blind,json=bigBlind" json:"big_blind,omitempty"`
	Timeout    int32    `protobuf:"varint,4,opt,name=timeout" json:"timeout,omitempty"`
	Max        int32    `protobuf:"varint,5,opt,name=max" json:"max,omitempty"`
}

func (m *RoomSetTableReq) Reset()                    { *m = RoomSetTableReq{} }
func (m *RoomSetTableReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomSetTableReq) ProtoMessage()               {}
func (*RoomSetTableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RoomSetTableReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomSetTableReq) GetSmallBlind() int32 {
	if m != nil {
		return m.SmallBlind
	}
	return 0
}

func (m *RoomSetTableReq) GetBigBlind() int32 {
	if m != nil {
		return m.BigBlind
	}
	return 0
}

func (m *RoomSetTableReq) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *RoomSetTableReq) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

// 2004, 创建牌桌回复
type RoomSetTableAck struct {
	BaseAck *BaseAck   `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Table   *TableInfo `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
}

func (m *RoomSetTableAck) Reset()                    { *m = RoomSetTableAck{} }
func (m *RoomSetTableAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomSetTableAck) ProtoMessage()               {}
func (*RoomSetTableAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RoomSetTableAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomSetTableAck) GetTable() *TableInfo {
	if m != nil {
		return m.Table
	}
	return nil
}

// 2005, 查询牌桌信息
type RoomGetTableReq struct {
	BaseReq *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	RoomId  int32    `protobuf:"varint,2,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	TableId string   `protobuf:"bytes,3,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *RoomGetTableReq) Reset()                    { *m = RoomGetTableReq{} }
func (m *RoomGetTableReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomGetTableReq) ProtoMessage()               {}
func (*RoomGetTableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RoomGetTableReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomGetTableReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *RoomGetTableReq) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

// 2006, 查询牌桌信息回复 (当玩家加入牌桌后，服务器会向此用户推送牌桌信息)
type RoomGetTableAck struct {
	BaseAck *BaseAck   `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Table   *TableInfo `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
}

func (m *RoomGetTableAck) Reset()                    { *m = RoomGetTableAck{} }
func (m *RoomGetTableAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomGetTableAck) ProtoMessage()               {}
func (*RoomGetTableAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RoomGetTableAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomGetTableAck) GetTable() *TableInfo {
	if m != nil {
		return m.Table
	}
	return nil
}

// 2007, 查询玩家信息
type RoomGetPlayerReq struct {
	BaseReq  *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	PlayerId int32    `protobuf:"varint,2,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
}

func (m *RoomGetPlayerReq) Reset()                    { *m = RoomGetPlayerReq{} }
func (m *RoomGetPlayerReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomGetPlayerReq) ProtoMessage()               {}
func (*RoomGetPlayerReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RoomGetPlayerReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomGetPlayerReq) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

// 2008, 查询玩家信息回复
type RoomGetPlayerAck struct {
	BaseAck *BaseAck    `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Player  *PlayerInfo `protobuf:"bytes,2,opt,name=player" json:"player,omitempty"`
}

func (m *RoomGetPlayerAck) Reset()                    { *m = RoomGetPlayerAck{} }
func (m *RoomGetPlayerAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomGetPlayerAck) ProtoMessage()               {}
func (*RoomGetPlayerAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *RoomGetPlayerAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomGetPlayerAck) GetPlayer() *PlayerInfo {
	if m != nil {
		return m.Player
	}
	return nil
}

// 2101, 玩家加入游戏
type RoomPlayerJoinReq struct {
	BaseReq *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	RoomId  int32    `protobuf:"varint,2,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	TableId string   `protobuf:"bytes,3,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *RoomPlayerJoinReq) Reset()                    { *m = RoomPlayerJoinReq{} }
func (m *RoomPlayerJoinReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerJoinReq) ProtoMessage()               {}
func (*RoomPlayerJoinReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RoomPlayerJoinReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomPlayerJoinReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *RoomPlayerJoinReq) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

// 2102, 通报加入游戏的玩家
type RoomPlayerJoinAck struct {
	BaseAck *BaseAck    `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Player  *PlayerInfo `protobuf:"bytes,2,opt,name=player" json:"player,omitempty"`
}

func (m *RoomPlayerJoinAck) Reset()                    { *m = RoomPlayerJoinAck{} }
func (m *RoomPlayerJoinAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerJoinAck) ProtoMessage()               {}
func (*RoomPlayerJoinAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RoomPlayerJoinAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomPlayerJoinAck) GetPlayer() *PlayerInfo {
	if m != nil {
		return m.Player
	}
	return nil
}

// 2103, 玩家离开牌桌
type RoomPlayerGoneReq struct {
	BaseReq *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	TableId string   `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *RoomPlayerGoneReq) Reset()                    { *m = RoomPlayerGoneReq{} }
func (m *RoomPlayerGoneReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerGoneReq) ProtoMessage()               {}
func (*RoomPlayerGoneReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RoomPlayerGoneReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomPlayerGoneReq) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

// 2104, 服务器广播离开牌桌的玩家
type RoomPlayerGoneAck struct {
	BaseAck *BaseAck    `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Player  *PlayerInfo `protobuf:"bytes,2,opt,name=player" json:"player,omitempty"`
}

func (m *RoomPlayerGoneAck) Reset()                    { *m = RoomPlayerGoneAck{} }
func (m *RoomPlayerGoneAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerGoneAck) ProtoMessage()               {}
func (*RoomPlayerGoneAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *RoomPlayerGoneAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomPlayerGoneAck) GetPlayer() *PlayerInfo {
	if m != nil {
		return m.Player
	}
	return nil
}

// 2105, 玩家下注
// 玩家有四种下注方式，下注数分别对应为：
// 弃牌：< 0 或空 表示弃牌 (fold)
// 看注：= 0 表示看注 (check)
// 跟注：小于等于单注额 (call)
// 加注：大于单注额 (raise)
// 全押：等于玩家手中所有筹码 (allin)
type RoomPlayerBetReq struct {
	BaseReq *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	TableId string   `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	Bet     int32    `protobuf:"varint,3,opt,name=bet" json:"bet,omitempty"`
}

func (m *RoomPlayerBetReq) Reset()                    { *m = RoomPlayerBetReq{} }
func (m *RoomPlayerBetReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerBetReq) ProtoMessage()               {}
func (*RoomPlayerBetReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RoomPlayerBetReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomPlayerBetReq) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *RoomPlayerBetReq) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

// 2106, 玩家下注回复
type RoomPlayerBetAck struct {
	BaseAck *BaseAck `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	TableId string   `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	Action  string   `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	Bet     int32    `protobuf:"varint,4,opt,name=bet" json:"bet,omitempty"`
	Chips   int32    `protobuf:"varint,5,opt,name=chips" json:"chips,omitempty"`
	Pos     int32    `protobuf:"varint,6,opt,name=pos" json:"pos,omitempty"`
}

func (m *RoomPlayerBetAck) Reset()                    { *m = RoomPlayerBetAck{} }
func (m *RoomPlayerBetAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerBetAck) ProtoMessage()               {}
func (*RoomPlayerBetAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *RoomPlayerBetAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomPlayerBetAck) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *RoomPlayerBetAck) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RoomPlayerBetAck) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

func (m *RoomPlayerBetAck) GetChips() int32 {
	if m != nil {
		return m.Chips
	}
	return 0
}

func (m *RoomPlayerBetAck) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

// 2107, 通报本局庄家 (服务器广播此消息，代表游戏开始并确定本局庄家)
type RoomButtonAck struct {
	BaseAck   *BaseAck `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	TableId   string   `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	ButtonPos int32    `protobuf:"varint,3,opt,name=button_pos,json=buttonPos" json:"button_pos,omitempty"`
}

func (m *RoomButtonAck) Reset()                    { *m = RoomButtonAck{} }
func (m *RoomButtonAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomButtonAck) ProtoMessage()               {}
func (*RoomButtonAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *RoomButtonAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomButtonAck) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *RoomButtonAck) GetButtonPos() int32 {
	if m != nil {
		return m.ButtonPos
	}
	return 0
}

// 2108, 发牌 - 共有四轮发牌，按顺序分别为：preflop (底牌), flop (翻牌), turn (转牌), river(河牌)
type RoomDealAck struct {
	BaseAck *BaseAck    `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Action  string      `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	Cards   []*CardInfo `protobuf:"bytes,3,rep,name=cards" json:"cards,omitempty"`
	//
	// 这套手牌的权重等级，一共有10个等级
	// 皇家同花顺：10
	// 同花顺    ：9
	// 四条      ：8
	// 葫芦      ：7
	// 同花      ：6
	// 顺子      ：5
	// 三条      ：4
	// 两对      ：3
	// 一对      ：2
	// 高牌      ：1
	HandLevel int32 `protobuf:"varint,4,opt,name=hand_level,json=handLevel" json:"hand_level,omitempty"`
	//
	// 一副手牌的最终值，Level相同的情况下，我们用FinalValue来比较大小
	// 例如一副手牌：3 3 3 7 7 A K，
	// 它的值是：33377AK
	// 数据排序规则是，出现次数多者优先，次数相同则大小优先
	HandFinalValue int32 `protobuf:"varint,5,opt,name=hand_final_value,json=handFinalValue" json:"hand_final_value,omitempty"`
}

func (m *RoomDealAck) Reset()                    { *m = RoomDealAck{} }
func (m *RoomDealAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomDealAck) ProtoMessage()               {}
func (*RoomDealAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *RoomDealAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomDealAck) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RoomDealAck) GetCards() []*CardInfo {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *RoomDealAck) GetHandLevel() int32 {
	if m != nil {
		return m.HandLevel
	}
	return 0
}

func (m *RoomDealAck) GetHandFinalValue() int32 {
	if m != nil {
		return m.HandFinalValue
	}
	return 0
}

// 2109, 通报奖池
type RoomPotAck struct {
	BaseAck *BaseAck `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Pot     []int32  `protobuf:"varint,2,rep,packed,name=pot" json:"pot,omitempty"`
}

func (m *RoomPotAck) Reset()                    { *m = RoomPotAck{} }
func (m *RoomPotAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomPotAck) ProtoMessage()               {}
func (*RoomPotAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RoomPotAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomPotAck) GetPot() []int32 {
	if m != nil {
		return m.Pot
	}
	return nil
}

// 2110, 通报当前下注玩家
type RoomActionAck struct {
	BaseAck *BaseAck `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Pos     int32    `protobuf:"varint,2,opt,name=pos" json:"pos,omitempty"`
	BaseBet int32    `protobuf:"varint,3,opt,name=base_bet,json=baseBet" json:"base_bet,omitempty"`
}

func (m *RoomActionAck) Reset()                    { *m = RoomActionAck{} }
func (m *RoomActionAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomActionAck) ProtoMessage()               {}
func (*RoomActionAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *RoomActionAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomActionAck) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *RoomActionAck) GetBaseBet() int32 {
	if m != nil {
		return m.BaseBet
	}
	return 0
}

// 2111, 摊牌和比牌
type RoomShowdownAck struct {
	BaseAck *BaseAck   `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Table   *TableInfo `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
	PotList []*PotInfo `protobuf:"bytes,3,rep,name=pot_list,json=potList" json:"pot_list,omitempty"`
}

func (m *RoomShowdownAck) Reset()                    { *m = RoomShowdownAck{} }
func (m *RoomShowdownAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomShowdownAck) ProtoMessage()               {}
func (*RoomShowdownAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RoomShowdownAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomShowdownAck) GetTable() *TableInfo {
	if m != nil {
		return m.Table
	}
	return nil
}

func (m *RoomShowdownAck) GetPotList() []*PotInfo {
	if m != nil {
		return m.PotList
	}
	return nil
}

// 2112, 玩家站起
type RoomPlayerStandupReq struct {
	BaseReq *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	TableId string   `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *RoomPlayerStandupReq) Reset()                    { *m = RoomPlayerStandupReq{} }
func (m *RoomPlayerStandupReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerStandupReq) ProtoMessage()               {}
func (*RoomPlayerStandupReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *RoomPlayerStandupReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomPlayerStandupReq) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

// 2113, 玩家站起通报
type RoomPlayerStandupAck struct {
	BaseAck   *BaseAck `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	TableId   string   `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	PlayerId  int32    `protobuf:"varint,3,opt,name=player_id,json=playerId" json:"player_id,omitempty"`
	PlayerPos int32    `protobuf:"varint,4,opt,name=player_pos,json=playerPos" json:"player_pos,omitempty"`
}

func (m *RoomPlayerStandupAck) Reset()                    { *m = RoomPlayerStandupAck{} }
func (m *RoomPlayerStandupAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerStandupAck) ProtoMessage()               {}
func (*RoomPlayerStandupAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *RoomPlayerStandupAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomPlayerStandupAck) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *RoomPlayerStandupAck) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *RoomPlayerStandupAck) GetPlayerPos() int32 {
	if m != nil {
		return m.PlayerPos
	}
	return 0
}

// 2114, 玩家坐下
type RoomPlayerSitdownReq struct {
	BaseReq *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	TableId string   `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
}

func (m *RoomPlayerSitdownReq) Reset()                    { *m = RoomPlayerSitdownReq{} }
func (m *RoomPlayerSitdownReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerSitdownReq) ProtoMessage()               {}
func (*RoomPlayerSitdownReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *RoomPlayerSitdownReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomPlayerSitdownReq) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

// 2115, 玩家坐下通报
type RoomPlayerSitdownAck struct {
	BaseAck *BaseAck    `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Player  *PlayerInfo `protobuf:"bytes,2,opt,name=player" json:"player,omitempty"`
}

func (m *RoomPlayerSitdownAck) Reset()                    { *m = RoomPlayerSitdownAck{} }
func (m *RoomPlayerSitdownAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerSitdownAck) ProtoMessage()               {}
func (*RoomPlayerSitdownAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *RoomPlayerSitdownAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomPlayerSitdownAck) GetPlayer() *PlayerInfo {
	if m != nil {
		return m.Player
	}
	return nil
}

// 2116, 玩家换桌
type RoomPlayerChangeTableReq struct {
	BaseReq *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
}

func (m *RoomPlayerChangeTableReq) Reset()                    { *m = RoomPlayerChangeTableReq{} }
func (m *RoomPlayerChangeTableReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerChangeTableReq) ProtoMessage()               {}
func (*RoomPlayerChangeTableReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *RoomPlayerChangeTableReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

// 2117, 关闭牌桌，服务进行维护时通报
type RoomShutdownTableAck struct {
	BaseAck *BaseAck `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
}

func (m *RoomShutdownTableAck) Reset()                    { *m = RoomShutdownTableAck{} }
func (m *RoomShutdownTableAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomShutdownTableAck) ProtoMessage()               {}
func (*RoomShutdownTableAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *RoomShutdownTableAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

// 2118, 玩家退出游戏  type: 1注销 2杀掉进程
type RoomPlayerLogoutReq struct {
	BaseReq *BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq" json:"base_req,omitempty"`
	Type    int32    `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
}

func (m *RoomPlayerLogoutReq) Reset()                    { *m = RoomPlayerLogoutReq{} }
func (m *RoomPlayerLogoutReq) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerLogoutReq) ProtoMessage()               {}
func (*RoomPlayerLogoutReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *RoomPlayerLogoutReq) GetBaseReq() *BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

func (m *RoomPlayerLogoutReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

// 2119, 玩家断线重连 牌桌信息回复
type RoomPlayerReconnectAck struct {
	BaseAck *BaseAck   `protobuf:"bytes,1,opt,name=base_ack,json=baseAck" json:"base_ack,omitempty"`
	Table   *TableInfo `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
}

func (m *RoomPlayerReconnectAck) Reset()                    { *m = RoomPlayerReconnectAck{} }
func (m *RoomPlayerReconnectAck) String() string            { return proto1.CompactTextString(m) }
func (*RoomPlayerReconnectAck) ProtoMessage()               {}
func (*RoomPlayerReconnectAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *RoomPlayerReconnectAck) GetBaseAck() *BaseAck {
	if m != nil {
		return m.BaseAck
	}
	return nil
}

func (m *RoomPlayerReconnectAck) GetTable() *TableInfo {
	if m != nil {
		return m.Table
	}
	return nil
}

type PotInfo struct {
	Pot int32   `protobuf:"varint,1,opt,name=pot" json:"pot,omitempty"`
	Ps  []int32 `protobuf:"varint,2,rep,packed,name=ps" json:"ps,omitempty"`
}

func (m *PotInfo) Reset()                    { *m = PotInfo{} }
func (m *PotInfo) String() string            { return proto1.CompactTextString(m) }
func (*PotInfo) ProtoMessage()               {}
func (*PotInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *PotInfo) GetPot() int32 {
	if m != nil {
		return m.Pot
	}
	return 0
}

func (m *PotInfo) GetPs() []int32 {
	if m != nil {
		return m.Ps
	}
	return nil
}

// 牌桌信息
type TableInfo struct {
	Id         string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SmallBlind int32         `protobuf:"varint,2,opt,name=small_blind,json=smallBlind" json:"small_blind,omitempty"`
	BigBlind   int32         `protobuf:"varint,3,opt,name=big_blind,json=bigBlind" json:"big_blind,omitempty"`
	Bet        int32         `protobuf:"varint,4,opt,name=bet" json:"bet,omitempty"`
	Timeout    int32         `protobuf:"varint,5,opt,name=timeout" json:"timeout,omitempty"`
	Cards      []*CardInfo   `protobuf:"bytes,6,rep,name=cards" json:"cards,omitempty"`
	Pot        []int32       `protobuf:"varint,7,rep,packed,name=pot" json:"pot,omitempty"`
	Chips      []int32       `protobuf:"varint,8,rep,packed,name=chips" json:"chips,omitempty"`
	Button     int32         `protobuf:"varint,9,opt,name=button" json:"button,omitempty"`
	N          int32         `protobuf:"varint,10,opt,name=n" json:"n,omitempty"`
	Max        int32         `protobuf:"varint,11,opt,name=max" json:"max,omitempty"`
	Players    []*PlayerInfo `protobuf:"bytes,12,rep,name=players" json:"players,omitempty"`
	Status     int32         `protobuf:"varint,13,opt,name=status" json:"status,omitempty"`
}

func (m *TableInfo) Reset()                    { *m = TableInfo{} }
func (m *TableInfo) String() string            { return proto1.CompactTextString(m) }
func (*TableInfo) ProtoMessage()               {}
func (*TableInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *TableInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TableInfo) GetSmallBlind() int32 {
	if m != nil {
		return m.SmallBlind
	}
	return 0
}

func (m *TableInfo) GetBigBlind() int32 {
	if m != nil {
		return m.BigBlind
	}
	return 0
}

func (m *TableInfo) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

func (m *TableInfo) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *TableInfo) GetCards() []*CardInfo {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *TableInfo) GetPot() []int32 {
	if m != nil {
		return m.Pot
	}
	return nil
}

func (m *TableInfo) GetChips() []int32 {
	if m != nil {
		return m.Chips
	}
	return nil
}

func (m *TableInfo) GetButton() int32 {
	if m != nil {
		return m.Button
	}
	return 0
}

func (m *TableInfo) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *TableInfo) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *TableInfo) GetPlayers() []*PlayerInfo {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *TableInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

// 牌
type CardInfo struct {
	Suit int32 `protobuf:"varint,1,opt,name=suit" json:"suit,omitempty"`
	Val  int32 `protobuf:"varint,2,opt,name=val" json:"val,omitempty"`
}

func (m *CardInfo) Reset()                    { *m = CardInfo{} }
func (m *CardInfo) String() string            { return proto1.CompactTextString(m) }
func (*CardInfo) ProtoMessage()               {}
func (*CardInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *CardInfo) GetSuit() int32 {
	if m != nil {
		return m.Suit
	}
	return 0
}

func (m *CardInfo) GetVal() int32 {
	if m != nil {
		return m.Val
	}
	return 0
}

// 玩家信息
type PlayerInfo struct {
	Pos       int32       `protobuf:"varint,1,opt,name=pos" json:"pos,omitempty"`
	Id        int32       `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Nickname  string      `protobuf:"bytes,3,opt,name=nickname" json:"nickname,omitempty"`
	Avatar    string      `protobuf:"bytes,4,opt,name=avatar" json:"avatar,omitempty"`
	Level     string      `protobuf:"bytes,5,opt,name=level" json:"level,omitempty"`
	Chips     int32       `protobuf:"varint,6,opt,name=chips" json:"chips,omitempty"`
	Bet       int32       `protobuf:"varint,7,opt,name=bet" json:"bet,omitempty"`
	Action    string      `protobuf:"bytes,8,opt,name=action" json:"action,omitempty"`
	Cards     []*CardInfo `protobuf:"bytes,9,rep,name=cards" json:"cards,omitempty"`
	HandLevel int32       `protobuf:"varint,10,opt,name=hand_level,json=handLevel" json:"hand_level,omitempty"`
}

func (m *PlayerInfo) Reset()                    { *m = PlayerInfo{} }
func (m *PlayerInfo) String() string            { return proto1.CompactTextString(m) }
func (*PlayerInfo) ProtoMessage()               {}
func (*PlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *PlayerInfo) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *PlayerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PlayerInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *PlayerInfo) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *PlayerInfo) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *PlayerInfo) GetChips() int32 {
	if m != nil {
		return m.Chips
	}
	return 0
}

func (m *PlayerInfo) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

func (m *PlayerInfo) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *PlayerInfo) GetCards() []*CardInfo {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *PlayerInfo) GetHandLevel() int32 {
	if m != nil {
		return m.HandLevel
	}
	return 0
}

func init() {
	proto1.RegisterType((*AutoId)(nil), "proto.AutoId")
	proto1.RegisterType((*SeedInfo)(nil), "proto.SeedInfo")
	proto1.RegisterType((*BaseAck)(nil), "proto.BaseAck")
	proto1.RegisterType((*BaseReq)(nil), "proto.BaseReq")
	proto1.RegisterType((*UserLoginReq)(nil), "proto.UserLoginReq")
	proto1.RegisterType((*UserLoginAck)(nil), "proto.UserLoginAck")
	proto1.RegisterType((*KickedOutAck)(nil), "proto.KickedOutAck")
	proto1.RegisterType((*RoomSetTableReq)(nil), "proto.RoomSetTableReq")
	proto1.RegisterType((*RoomSetTableAck)(nil), "proto.RoomSetTableAck")
	proto1.RegisterType((*RoomGetTableReq)(nil), "proto.RoomGetTableReq")
	proto1.RegisterType((*RoomGetTableAck)(nil), "proto.RoomGetTableAck")
	proto1.RegisterType((*RoomGetPlayerReq)(nil), "proto.RoomGetPlayerReq")
	proto1.RegisterType((*RoomGetPlayerAck)(nil), "proto.RoomGetPlayerAck")
	proto1.RegisterType((*RoomPlayerJoinReq)(nil), "proto.RoomPlayerJoinReq")
	proto1.RegisterType((*RoomPlayerJoinAck)(nil), "proto.RoomPlayerJoinAck")
	proto1.RegisterType((*RoomPlayerGoneReq)(nil), "proto.RoomPlayerGoneReq")
	proto1.RegisterType((*RoomPlayerGoneAck)(nil), "proto.RoomPlayerGoneAck")
	proto1.RegisterType((*RoomPlayerBetReq)(nil), "proto.RoomPlayerBetReq")
	proto1.RegisterType((*RoomPlayerBetAck)(nil), "proto.RoomPlayerBetAck")
	proto1.RegisterType((*RoomButtonAck)(nil), "proto.RoomButtonAck")
	proto1.RegisterType((*RoomDealAck)(nil), "proto.RoomDealAck")
	proto1.RegisterType((*RoomPotAck)(nil), "proto.RoomPotAck")
	proto1.RegisterType((*RoomActionAck)(nil), "proto.RoomActionAck")
	proto1.RegisterType((*RoomShowdownAck)(nil), "proto.RoomShowdownAck")
	proto1.RegisterType((*RoomPlayerStandupReq)(nil), "proto.RoomPlayerStandupReq")
	proto1.RegisterType((*RoomPlayerStandupAck)(nil), "proto.RoomPlayerStandupAck")
	proto1.RegisterType((*RoomPlayerSitdownReq)(nil), "proto.RoomPlayerSitdownReq")
	proto1.RegisterType((*RoomPlayerSitdownAck)(nil), "proto.RoomPlayerSitdownAck")
	proto1.RegisterType((*RoomPlayerChangeTableReq)(nil), "proto.RoomPlayerChangeTableReq")
	proto1.RegisterType((*RoomShutdownTableAck)(nil), "proto.RoomShutdownTableAck")
	proto1.RegisterType((*RoomPlayerLogoutReq)(nil), "proto.RoomPlayerLogoutReq")
	proto1.RegisterType((*RoomPlayerReconnectAck)(nil), "proto.RoomPlayerReconnectAck")
	proto1.RegisterType((*PotInfo)(nil), "proto.PotInfo")
	proto1.RegisterType((*TableInfo)(nil), "proto.TableInfo")
	proto1.RegisterType((*CardInfo)(nil), "proto.CardInfo")
	proto1.RegisterType((*PlayerInfo)(nil), "proto.PlayerInfo")
}

func init() { proto1.RegisterFile("agent.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x17, 0xdd, 0x6e, 0xdc, 0x44,
	0x57, 0xde, 0xed, 0xae, 0xd7, 0x67, 0xd3, 0x34, 0x75, 0xab, 0xd6, 0xdf, 0x57, 0x45, 0x2d, 0x23,
	0x81, 0x52, 0x55, 0x44, 0x28, 0x5c, 0x71, 0x99, 0x14, 0x1a, 0x2d, 0x44, 0x22, 0x72, 0x42, 0x05,
	0x08, 0x61, 0xcd, 0xda, 0x93, 0xdd, 0x61, 0xbd, 0x33, 0x8e, 0x67, 0xbc, 0xa5, 0x4f, 0xc1, 0x2d,
	0x4f, 0xc0, 0x05, 0x4f, 0xc1, 0x1d, 0xd7, 0xbc, 0x10, 0x42, 0x67, 0x66, 0xbc, 0xde, 0x0d, 0x51,
	0x24, 0x87, 0xec, 0x95, 0xe7, 0xfc, 0xcc, 0xf9, 0xf7, 0x39, 0x67, 0x60, 0x48, 0x27, 0x4c, 0xe8,
	0xfd, 0xa2, 0x94, 0x5a, 0x86, 0x3d, 0xf3, 0x21, 0x11, 0xf4, 0x0f, 0x2b, 0x2d, 0x47, 0x59, 0xb8,
	0x0d, 0x1d, 0x9e, 0x45, 0xde, 0x0b, 0x6f, 0xaf, 0x17, 0x77, 0x78, 0x46, 0x32, 0x18, 0x9c, 0x31,
	0x96, 0x8d, 0xc4, 0x85, 0x0c, 0xf7, 0x60, 0x27, 0xcd, 0x39, 0x13, 0x3a, 0x51, 0x4c, 0x64, 0x89,
	0x62, 0xac, 0xe6, 0xdc, 0xb6, 0xf8, 0x33, 0x26, 0x32, 0xe4, 0x0e, 0xf7, 0xe1, 0x91, 0xe3, 0x2c,
	0x59, 0xca, 0xf8, 0x82, 0x59, 0xe6, 0x8e, 0x61, 0x7e, 0x68, 0x49, 0xb1, 0xa5, 0x20, 0x3f, 0xf9,
	0x18, 0xfc, 0x23, 0xaa, 0xd8, 0x61, 0x3a, 0x0b, 0x77, 0xa0, 0x5b, 0x32, 0xed, 0xe4, 0xe2, 0x11,
	0x31, 0x73, 0x35, 0x31, 0x97, 0x83, 0x18, 0x8f, 0xe4, 0x47, 0xcb, 0x1e, 0xb3, 0xcb, 0xf0, 0x7f,
	0x30, 0xa0, 0x45, 0x91, 0x5c, 0x94, 0x72, 0x6e, 0xee, 0x04, 0xb1, 0x4f, 0x8b, 0xe2, 0x4d, 0x29,
	0xe7, 0xe1, 0x53, 0xc0, 0x63, 0xb2, 0x60, 0xa5, 0x53, 0xdc, 0xa7, 0x45, 0xf1, 0x96, 0x95, 0xe1,
	0x73, 0x18, 0x22, 0x21, 0x9d, 0x52, 0x21, 0x58, 0x1e, 0x75, 0xcd, 0x35, 0xa0, 0x45, 0xf1, 0xda,
	0x62, 0xc8, 0x9f, 0x1e, 0x6c, 0x7d, 0xa3, 0x58, 0x79, 0x22, 0x27, 0x5c, 0xa0, 0x96, 0x97, 0x30,
	0x18, 0x53, 0xc5, 0x92, 0x92, 0x5d, 0x1a, 0x2d, 0xc3, 0x83, 0x6d, 0x1b, 0xc0, 0x7d, 0x67, 0x47,
	0xec, 0x8f, 0x9d, 0x41, 0x4f, 0xc1, 0xaf, 0x14, 0x2b, 0x13, 0x5e, 0xbb, 0xdb, 0x47, 0x70, 0x94,
	0x85, 0xcf, 0x20, 0xa8, 0x04, 0xbf, 0xac, 0x18, 0x92, 0xac, 0xce, 0x81, 0x45, 0x8c, 0xb2, 0xf0,
	0x31, 0xf4, 0xb4, 0x9c, 0x31, 0x11, 0xdd, 0x33, 0x04, 0x0b, 0x84, 0xbb, 0x00, 0xa9, 0x14, 0x82,
	0xa5, 0x3a, 0xd1, 0x32, 0xea, 0x19, 0x52, 0xe0, 0x30, 0xe7, 0x32, 0xfc, 0x00, 0xb6, 0xb8, 0xc2,
	0x08, 0x5b, 0x4c, 0xd4, 0x37, 0xfa, 0x86, 0x5c, 0xc5, 0x35, 0x8a, 0x7c, 0xbb, 0xe2, 0x08, 0x46,
	0xb7, 0x76, 0x84, 0xa6, 0xb3, 0x6b, 0x1c, 0x39, 0x4c, 0x67, 0xd6, 0x11, 0x64, 0xdd, 0x05, 0x50,
	0xac, 0x5c, 0xf0, 0x94, 0xd5, 0xbe, 0x04, 0x71, 0xe0, 0x30, 0xa3, 0x8c, 0x7c, 0x06, 0x5b, 0x5f,
	0xf1, 0x74, 0xc6, 0xb2, 0xaf, 0x2b, 0xdd, 0x4e, 0x32, 0xf9, 0xcd, 0x83, 0x07, 0xb1, 0x94, 0xf3,
	0x33, 0xa6, 0xcf, 0xe9, 0x38, 0x67, 0x2d, 0x23, 0xfc, 0x1c, 0x86, 0x6a, 0x4e, 0xf3, 0x3c, 0x19,
	0xe7, 0x5c, 0xd4, 0x51, 0x06, 0x83, 0x3a, 0x42, 0x0c, 0x46, 0x7a, 0xcc, 0x27, 0x8e, 0xdc, 0x35,
	0xe4, 0xc1, 0x98, 0x4f, 0x2c, 0x31, 0x02, 0x5f, 0xf3, 0x39, 0x93, 0x95, 0x36, 0xb1, 0xee, 0xc5,
	0x35, 0x68, 0xea, 0x8c, 0xfe, 0x6c, 0xc2, 0xdc, 0x8b, 0xf1, 0x48, 0xb2, 0x75, 0x3b, 0x5b, 0x06,
	0xf0, 0x23, 0xe8, 0x69, 0xbc, 0x66, 0x2c, 0x1c, 0x1e, 0xec, 0x38, 0x3e, 0x23, 0x0a, 0xff, 0xa7,
	0xd8, 0x92, 0x49, 0x61, 0xb5, 0x1c, 0xdf, 0x2e, 0x1a, 0x4f, 0xc1, 0x2f, 0xa5, 0x9c, 0xaf, 0xd4,
	0x1b, 0x82, 0xa3, 0x0c, 0xff, 0x0c, 0x23, 0xbf, 0x29, 0x37, 0xdf, 0xc0, 0xa3, 0xac, 0xf6, 0xeb,
	0x78, 0xb3, 0x7e, 0x7d, 0x0f, 0x3b, 0x4e, 0xcb, 0x69, 0x4e, 0xdf, 0xb3, 0xb2, 0xa5, 0x63, 0xcf,
	0x20, 0x28, 0xcc, 0xbd, 0xc6, 0xb5, 0x81, 0x45, 0x8c, 0x32, 0x32, 0xbd, 0x22, 0xbb, 0xa5, 0x0b,
	0x2f, 0xa1, 0x6f, 0x45, 0x39, 0x1f, 0x1e, 0x3a, 0x46, 0x2b, 0xcc, 0x38, 0xe1, 0x18, 0x48, 0x09,
	0x0f, 0x51, 0x93, 0xa5, 0x7c, 0x29, 0x6f, 0xd3, 0x0f, 0x5a, 0xe7, 0x87, 0x5f, 0xd5, 0xb9, 0x39,
	0xf7, 0xbe, 0x5b, 0x55, 0x75, 0x2c, 0x45, 0xdb, 0xf2, 0x5b, 0xf5, 0xa2, 0x73, 0x83, 0x17, 0x28,
	0x7a, 0x73, 0x5e, 0xfc, 0x64, 0xcb, 0xc1, 0x52, 0x8e, 0x98, 0xbe, 0x33, 0x27, 0xb0, 0x29, 0x8c,
	0x99, 0x76, 0x5d, 0x04, 0x8f, 0xe4, 0x77, 0xef, 0x8a, 0xb2, 0x96, 0x6e, 0xdd, 0xa0, 0xec, 0x09,
	0xf4, 0x69, 0xaa, 0xb9, 0x14, 0xae, 0x20, 0x1c, 0x54, 0x1b, 0x71, 0x6f, 0x69, 0x04, 0xce, 0x8b,
	0x74, 0xca, 0x0b, 0xe5, 0xba, 0x95, 0x05, 0x90, 0xaf, 0x90, 0xca, 0xcd, 0x01, 0x3c, 0x12, 0x0d,
	0xf7, 0xd1, 0xd6, 0xa3, 0x4a, 0x6b, 0x29, 0xee, 0xce, 0xd0, 0x5d, 0x80, 0xb1, 0x11, 0x99, 0xa0,
	0x3e, 0x1b, 0x9c, 0xc0, 0x62, 0x4e, 0xa5, 0x22, 0x7f, 0x78, 0x30, 0x44, 0xb5, 0x9f, 0x33, 0x9a,
	0xb7, 0x54, 0xda, 0x84, 0xa0, 0xb3, 0x16, 0x82, 0x0f, 0xa1, 0x97, 0xd2, 0x32, 0x43, 0x65, 0xdd,
	0xbd, 0xe1, 0xc1, 0x03, 0x77, 0xff, 0x35, 0x2d, 0x33, 0xdb, 0x73, 0x0c, 0x15, 0x0d, 0x9b, 0x52,
	0x91, 0x25, 0x39, 0x5b, 0xb0, 0xdc, 0x05, 0x2c, 0x40, 0xcc, 0x09, 0x22, 0x70, 0x83, 0x31, 0xe4,
	0x0b, 0x2e, 0x68, 0x9e, 0x2c, 0x68, 0x5e, 0x31, 0x17, 0xc1, 0x6d, 0xc4, 0xbf, 0x41, 0xf4, 0x5b,
	0xc4, 0x92, 0x11, 0x80, 0x49, 0xb2, 0x6c, 0x9b, 0x5e, 0x93, 0x03, 0x1d, 0x75, 0x5e, 0x74, 0x6d,
	0x0e, 0x34, 0x99, 0xd8, 0x1c, 0x1c, 0x1a, 0x47, 0x6e, 0x23, 0x4d, 0xb9, 0xce, 0x81, 0x47, 0xcc,
	0x8a, 0xb9, 0xdc, 0x54, 0xa5, 0x61, 0x3e, 0x62, 0x9a, 0xfc, 0x52, 0xcf, 0xd5, 0xa9, 0x7c, 0x97,
	0xc9, 0x77, 0x62, 0x33, 0x7d, 0x1d, 0x45, 0x16, 0x52, 0x27, 0x39, 0x57, 0xda, 0x65, 0xa3, 0x16,
	0x79, 0x2a, 0xb5, 0x61, 0xf4, 0x0b, 0xa9, 0x4f, 0xb8, 0xd2, 0xe4, 0x07, 0x78, 0xdc, 0xfc, 0x2a,
	0x67, 0x9a, 0x8a, 0xac, 0x2a, 0xee, 0xae, 0xc1, 0xfc, 0xea, 0x5d, 0x23, 0xfe, 0xee, 0x8a, 0x7c,
	0x6d, 0x00, 0x75, 0xd7, 0x07, 0x10, 0x16, 0x9a, 0x23, 0x62, 0x7e, 0x5c, 0xa1, 0x59, 0x0c, 0xfe,
	0x01, 0xeb, 0x8e, 0x73, 0x8d, 0xe9, 0xb8, 0x3b, 0xc7, 0xf3, 0x6b, 0xa4, 0x6f, 0xae, 0xb9, 0x7e,
	0x01, 0x51, 0xa3, 0x0d, 0x57, 0xe4, 0x09, 0xbb, 0xc5, 0xa2, 0x42, 0x0e, 0xad, 0xd1, 0x67, 0xd3,
	0xca, 0xd8, 0x7b, 0x8b, 0xcd, 0x83, 0x9c, 0xc3, 0xa3, 0xc6, 0x92, 0x13, 0x39, 0x91, 0x55, 0xdb,
	0x4e, 0x1f, 0xc2, 0x3d, 0xfd, 0xbe, 0x60, 0xee, 0x87, 0x32, 0x67, 0x32, 0x83, 0x27, 0x8d, 0xd4,
	0xe5, 0xea, 0xbc, 0xa1, 0xa5, 0xe8, 0x15, 0xf8, 0xee, 0x2f, 0xa9, 0x3b, 0x85, 0x57, 0xff, 0xdb,
	0x1a, 0x1f, 0x5f, 0x85, 0x72, 0xad, 0xa3, 0x53, 0x28, 0xf2, 0x57, 0x07, 0x82, 0xa5, 0x84, 0x95,
	0xa7, 0x59, 0x80, 0x4f, 0xb3, 0xff, 0xb8, 0x07, 0xff, 0x7b, 0xa6, 0xac, 0x6c, 0xc6, 0xbd, 0xf5,
	0xcd, 0x78, 0xd9, 0x7c, 0xfb, 0x37, 0x36, 0x5f, 0xe7, 0x90, 0xbf, 0x6c, 0x7d, 0xcd, 0x98, 0x1a,
	0x18, 0x9c, 0x1b, 0x53, 0x4f, 0xa0, 0x6f, 0x67, 0x45, 0x14, 0xd8, 0x8d, 0xc8, 0x42, 0xe1, 0x16,
	0x78, 0x22, 0x02, 0x83, 0xf2, 0x44, 0xbd, 0x8e, 0x0f, 0x97, 0xeb, 0x78, 0xf8, 0x0a, 0x7c, 0x5b,
	0x92, 0x2a, 0xda, 0x32, 0x86, 0x5c, 0x53, 0xb4, 0x35, 0x07, 0x2a, 0x51, 0x9a, 0xea, 0x4a, 0x45,
	0xf7, 0xad, 0x12, 0x0b, 0x91, 0x4f, 0x60, 0x50, 0xdb, 0x8d, 0xd5, 0xa0, 0x2a, 0x5e, 0xa7, 0xc0,
	0x9c, 0x51, 0xed, 0x82, 0xe6, 0x75, 0xc7, 0x5d, 0xd0, 0x9c, 0xfc, 0xed, 0x01, 0x34, 0x1a, 0xea,
	0x96, 0xec, 0x35, 0x2d, 0xd9, 0x26, 0xa6, 0x53, 0xbf, 0x99, 0xc3, 0xff, 0xc3, 0x40, 0xf0, 0x74,
	0x26, 0xe8, 0x9c, 0xd5, 0x0f, 0xbd, 0x1a, 0x36, 0xf3, 0x6d, 0x41, 0x35, 0x2d, 0xdd, 0x4b, 0xcf,
	0x41, 0x18, 0x29, 0x3b, 0xb3, 0xec, 0x2b, 0xcf, 0x02, 0x4d, 0xfc, 0xfa, 0x57, 0xc6, 0x3c, 0xa6,
	0xce, 0x6f, 0x52, 0xd7, 0x4c, 0xcd, 0xc1, 0xf5, 0x53, 0x33, 0x68, 0x31, 0x35, 0xe1, 0xca, 0xd4,
	0x1c, 0xf7, 0xcd, 0xad, 0x4f, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x1b, 0x5d, 0x2a, 0x3a,
	0x10, 0x00, 0x00,
}
