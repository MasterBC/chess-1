// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sts.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	sts.proto

It has these top-level messages:
	GameInfoArgs
	CardsInfo
	Player
	StsRes
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type GameInfoArgs struct {
	RoomId  int32        `protobuf:"varint,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	TableId string       `protobuf:"bytes,2,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	Max     int32        `protobuf:"varint,3,opt,name=max" json:"max,omitempty"`
	Start   int32        `protobuf:"varint,4,opt,name=start" json:"start,omitempty"`
	End     int32        `protobuf:"varint,5,opt,name=end" json:"end,omitempty"`
	Cards   []*CardsInfo `protobuf:"bytes,6,rep,name=cards" json:"cards,omitempty"`
	Button  int32        `protobuf:"varint,7,opt,name=button" json:"button,omitempty"`
	Sb      int32        `protobuf:"varint,8,opt,name=sb" json:"sb,omitempty"`
	Bb      int32        `protobuf:"varint,9,opt,name=bb" json:"bb,omitempty"`
	SbPos   int32        `protobuf:"varint,10,opt,name=sb_pos,json=sbPos" json:"sb_pos,omitempty"`
	BbPos   int32        `protobuf:"varint,11,opt,name=bb_pos,json=bbPos" json:"bb_pos,omitempty"`
	Pot     []int32      `protobuf:"varint,12,rep,packed,name=pot" json:"pot,omitempty"`
	Player  []*Player    `protobuf:"bytes,13,rep,name=player" json:"player,omitempty"`
}

func (m *GameInfoArgs) Reset()                    { *m = GameInfoArgs{} }
func (m *GameInfoArgs) String() string            { return proto1.CompactTextString(m) }
func (*GameInfoArgs) ProtoMessage()               {}
func (*GameInfoArgs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GameInfoArgs) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *GameInfoArgs) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

func (m *GameInfoArgs) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *GameInfoArgs) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GameInfoArgs) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *GameInfoArgs) GetCards() []*CardsInfo {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *GameInfoArgs) GetButton() int32 {
	if m != nil {
		return m.Button
	}
	return 0
}

func (m *GameInfoArgs) GetSb() int32 {
	if m != nil {
		return m.Sb
	}
	return 0
}

func (m *GameInfoArgs) GetBb() int32 {
	if m != nil {
		return m.Bb
	}
	return 0
}

func (m *GameInfoArgs) GetSbPos() int32 {
	if m != nil {
		return m.SbPos
	}
	return 0
}

func (m *GameInfoArgs) GetBbPos() int32 {
	if m != nil {
		return m.BbPos
	}
	return 0
}

func (m *GameInfoArgs) GetPot() []int32 {
	if m != nil {
		return m.Pot
	}
	return nil
}

func (m *GameInfoArgs) GetPlayer() []*Player {
	if m != nil {
		return m.Player
	}
	return nil
}

type CardsInfo struct {
	Suit  int32 `protobuf:"varint,1,opt,name=suit" json:"suit,omitempty"`
	Value int32 `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (m *CardsInfo) Reset()                    { *m = CardsInfo{} }
func (m *CardsInfo) String() string            { return proto1.CompactTextString(m) }
func (*CardsInfo) ProtoMessage()               {}
func (*CardsInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CardsInfo) GetSuit() int32 {
	if m != nil {
		return m.Suit
	}
	return 0
}

func (m *CardsInfo) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Player struct {
	Id             int32        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Nickname       string       `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	Avatar         string       `protobuf:"bytes,3,opt,name=avatar" json:"avatar,omitempty"`
	Pos            int32        `protobuf:"varint,4,opt,name=pos" json:"pos,omitempty"`
	Bet            int32        `protobuf:"varint,5,opt,name=bet" json:"bet,omitempty"`
	Win            int32        `protobuf:"varint,6,opt,name=win" json:"win,omitempty"`
	FormerChips    int32        `protobuf:"varint,7,opt,name=former_chips,json=formerChips" json:"former_chips,omitempty"`
	CurrentChips   int32        `protobuf:"varint,8,opt,name=current_chips,json=currentChips" json:"current_chips,omitempty"`
	Action         string       `protobuf:"bytes,9,opt,name=action" json:"action,omitempty"`
	Cards          []*CardsInfo `protobuf:"bytes,10,rep,name=cards" json:"cards,omitempty"`
	HandLevel      int32        `protobuf:"varint,11,opt,name=hand_level,json=handLevel" json:"hand_level,omitempty"`
	HandFinalValue int32        `protobuf:"varint,12,opt,name=hand_final_value,json=handFinalValue" json:"hand_final_value,omitempty"`
}

func (m *Player) Reset()                    { *m = Player{} }
func (m *Player) String() string            { return proto1.CompactTextString(m) }
func (*Player) ProtoMessage()               {}
func (*Player) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Player) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Player) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *Player) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *Player) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *Player) GetBet() int32 {
	if m != nil {
		return m.Bet
	}
	return 0
}

func (m *Player) GetWin() int32 {
	if m != nil {
		return m.Win
	}
	return 0
}

func (m *Player) GetFormerChips() int32 {
	if m != nil {
		return m.FormerChips
	}
	return 0
}

func (m *Player) GetCurrentChips() int32 {
	if m != nil {
		return m.CurrentChips
	}
	return 0
}

func (m *Player) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Player) GetCards() []*CardsInfo {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *Player) GetHandLevel() int32 {
	if m != nil {
		return m.HandLevel
	}
	return 0
}

func (m *Player) GetHandFinalValue() int32 {
	if m != nil {
		return m.HandFinalValue
	}
	return 0
}

type StsRes struct {
	Ret int32  `protobuf:"varint,1,opt,name=ret" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *StsRes) Reset()                    { *m = StsRes{} }
func (m *StsRes) String() string            { return proto1.CompactTextString(m) }
func (*StsRes) ProtoMessage()               {}
func (*StsRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StsRes) GetRet() int32 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *StsRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto1.RegisterType((*GameInfoArgs)(nil), "proto.GameInfoArgs")
	proto1.RegisterType((*CardsInfo)(nil), "proto.CardsInfo")
	proto1.RegisterType((*Player)(nil), "proto.Player")
	proto1.RegisterType((*StsRes)(nil), "proto.StsRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StsService service

type StsServiceClient interface {
	// 获取游戏信息
	GameInfo(ctx context.Context, in *GameInfoArgs, opts ...grpc.CallOption) (*StsRes, error)
}

type stsServiceClient struct {
	cc *grpc.ClientConn
}

func NewStsServiceClient(cc *grpc.ClientConn) StsServiceClient {
	return &stsServiceClient{cc}
}

func (c *stsServiceClient) GameInfo(ctx context.Context, in *GameInfoArgs, opts ...grpc.CallOption) (*StsRes, error) {
	out := new(StsRes)
	err := grpc.Invoke(ctx, "/proto.StsService/GameInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StsService service

type StsServiceServer interface {
	// 获取游戏信息
	GameInfo(context.Context, *GameInfoArgs) (*StsRes, error)
}

func RegisterStsServiceServer(s *grpc.Server, srv StsServiceServer) {
	s.RegisterService(&_StsService_serviceDesc, srv)
}

func _StsService_GameInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameInfoArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StsServiceServer).GameInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StsService/GameInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StsServiceServer).GameInfo(ctx, req.(*GameInfoArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _StsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StsService",
	HandlerType: (*StsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GameInfo",
			Handler:    _StsService_GameInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sts.proto",
}

func init() { proto1.RegisterFile("sts.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0x8a, 0xdb, 0x30,
	0x10, 0xc6, 0x1b, 0x67, 0xed, 0xc4, 0x93, 0x64, 0x09, 0xea, 0x3f, 0x75, 0xa1, 0x90, 0xa6, 0xb4,
	0xe4, 0x50, 0x96, 0xb2, 0xa5, 0xd7, 0x42, 0x59, 0x68, 0x09, 0xf4, 0xb0, 0x38, 0xd0, 0x6b, 0x90,
	0x6c, 0x65, 0x57, 0xd4, 0x96, 0x8c, 0xa4, 0x64, 0xdb, 0xe7, 0xeb, 0x23, 0xf4, 0x85, 0xca, 0x8c,
	0x94, 0xb4, 0xa7, 0x3d, 0x79, 0xbe, 0xdf, 0x0c, 0xf6, 0xe7, 0x6f, 0x24, 0x28, 0x7d, 0xf0, 0x97,
	0xbd, 0xb3, 0xc1, 0xb2, 0x9c, 0x1e, 0xcb, 0xdf, 0x19, 0x4c, 0xbf, 0x8a, 0x4e, 0xad, 0xcd, 0xce,
	0x7e, 0x76, 0xb7, 0x9e, 0x3d, 0x87, 0x91, 0xb3, 0xb6, 0xdb, 0xea, 0x86, 0x0f, 0x16, 0x83, 0x55,
	0x5e, 0x15, 0x28, 0xd7, 0x0d, 0x7b, 0x01, 0xe3, 0x20, 0x64, 0xab, 0xb0, 0x93, 0x2d, 0x06, 0xab,
	0xb2, 0x1a, 0x91, 0x5e, 0x37, 0x6c, 0x0e, 0xc3, 0x4e, 0xfc, 0xe4, 0x43, 0x9a, 0xc7, 0x92, 0x3d,
	0x81, 0xdc, 0x07, 0xe1, 0x02, 0x3f, 0x23, 0x16, 0x05, 0xce, 0x29, 0xd3, 0xf0, 0x3c, 0xce, 0x29,
	0xd3, 0xb0, 0xb7, 0x90, 0xd7, 0xc2, 0x35, 0x9e, 0x17, 0x8b, 0xe1, 0x6a, 0x72, 0x35, 0x8f, 0xe6,
	0x2e, 0xaf, 0x91, 0xa1, 0xa5, 0x2a, 0xb6, 0xd9, 0x33, 0x28, 0xe4, 0x3e, 0x04, 0x6b, 0xf8, 0x28,
	0x9a, 0x8a, 0x8a, 0x9d, 0x43, 0xe6, 0x25, 0x1f, 0x13, 0xcb, 0xbc, 0x44, 0x2d, 0x25, 0x2f, 0xa3,
	0x96, 0x92, 0x3d, 0x85, 0xc2, 0xcb, 0x6d, 0x6f, 0x3d, 0x87, 0x64, 0x44, 0xde, 0x58, 0x8f, 0x58,
	0x46, 0x3c, 0x89, 0x58, 0x12, 0x9e, 0xc3, 0xb0, 0xb7, 0x81, 0x4f, 0x17, 0x43, 0xf4, 0xd7, 0xdb,
	0xc0, 0xde, 0x40, 0xd1, 0xb7, 0xe2, 0x97, 0x72, 0x7c, 0x46, 0x06, 0x67, 0xc9, 0xe0, 0x0d, 0xc1,
	0x2a, 0x35, 0x97, 0x1f, 0xa1, 0x3c, 0x59, 0x66, 0x0c, 0xce, 0xfc, 0x5e, 0x87, 0x14, 0x1f, 0xd5,
	0x98, 0xc7, 0x41, 0xb4, 0x7b, 0x45, 0xc9, 0xe5, 0x55, 0x14, 0xcb, 0x3f, 0x19, 0x14, 0xf1, 0x4d,
	0x68, 0xfc, 0x94, 0x78, 0xa6, 0x1b, 0x76, 0x01, 0x63, 0xa3, 0xeb, 0x1f, 0x46, 0x74, 0x2a, 0xa5,
	0x7d, 0xd2, 0x18, 0x86, 0x38, 0x88, 0x20, 0x1c, 0x25, 0x5e, 0x56, 0x49, 0x45, 0xfb, 0x3e, 0x45,
	0x8e, 0x25, 0x12, 0xa9, 0xc2, 0x31, 0x70, 0xa9, 0x68, 0x05, 0xf7, 0xda, 0xf0, 0x22, 0x92, 0x7b,
	0x6d, 0xd8, 0x2b, 0x98, 0xee, 0xac, 0xeb, 0x94, 0xdb, 0xd6, 0x77, 0xba, 0xf7, 0x29, 0xe0, 0x49,
	0x64, 0xd7, 0x88, 0xd8, 0x6b, 0x98, 0xd5, 0x7b, 0xe7, 0x94, 0x09, 0x69, 0x26, 0x06, 0x3e, 0x4d,
	0x30, 0x0e, 0xa1, 0xab, 0x3a, 0x68, 0x6b, 0x28, 0x7e, 0x74, 0x45, 0xea, 0xdf, 0x8a, 0xe1, 0xe1,
	0x15, 0xbf, 0x04, 0xb8, 0x13, 0xa6, 0xd9, 0xb6, 0xea, 0xa0, 0xda, 0xb4, 0x97, 0x12, 0xc9, 0x37,
	0x04, 0x6c, 0x05, 0x73, 0x6a, 0xef, 0xb4, 0x11, 0xed, 0x36, 0x86, 0x39, 0xa5, 0xa1, 0x73, 0xe4,
	0x5f, 0x10, 0x7f, 0xa7, 0x54, 0xdf, 0x41, 0xb1, 0x09, 0xbe, 0x52, 0xf4, 0xfb, 0x4e, 0x1d, 0x17,
	0x81, 0x25, 0x9d, 0x54, 0x7f, 0x9b, 0x12, 0xc5, 0xf2, 0xea, 0x13, 0xc0, 0x26, 0xf8, 0x8d, 0x72,
	0x07, 0x5d, 0x2b, 0xf6, 0x1e, 0xc6, 0xc7, 0xdb, 0xc0, 0x1e, 0x27, 0xa7, 0xff, 0x5f, 0x8f, 0x8b,
	0xe3, 0x01, 0x88, 0x5f, 0x58, 0x3e, 0x92, 0x05, 0xe9, 0x0f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x1d, 0x46, 0x4e, 0x40, 0x5b, 0x03, 0x00, 0x00,
}
