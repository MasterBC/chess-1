// Code generated by protoc-gen-go. DO NOT EDIT.
// source: centre.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GameListArgs struct {
}

func (m *GameListArgs) Reset()                    { *m = GameListArgs{} }
func (m *GameListArgs) String() string            { return proto1.CompactTextString(m) }
func (*GameListArgs) ProtoMessage()               {}
func (*GameListArgs) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type GameListRes struct {
}

func (m *GameListRes) Reset()                    { *m = GameListRes{} }
func (m *GameListRes) String() string            { return proto1.CompactTextString(m) }
func (*GameListRes) ProtoMessage()               {}
func (*GameListRes) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type GamePlaygroundArgs struct {
}

func (m *GamePlaygroundArgs) Reset()                    { *m = GamePlaygroundArgs{} }
func (m *GamePlaygroundArgs) String() string            { return proto1.CompactTextString(m) }
func (*GamePlaygroundArgs) ProtoMessage()               {}
func (*GamePlaygroundArgs) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type GamePlaygroundRes struct {
}

func (m *GamePlaygroundRes) Reset()                    { *m = GamePlaygroundRes{} }
func (m *GamePlaygroundRes) String() string            { return proto1.CompactTextString(m) }
func (*GamePlaygroundRes) ProtoMessage()               {}
func (*GamePlaygroundRes) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func init() {
	proto1.RegisterType((*GameListArgs)(nil), "proto.GameListArgs")
	proto1.RegisterType((*GameListRes)(nil), "proto.GameListRes")
	proto1.RegisterType((*GamePlaygroundArgs)(nil), "proto.GamePlaygroundArgs")
	proto1.RegisterType((*GamePlaygroundRes)(nil), "proto.GamePlaygroundRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CentreService service

type CentreServiceClient interface {
	// 获取游戏列表
	GameList(ctx context.Context, in *GameListArgs, opts ...grpc.CallOption) (*GameListRes, error)
	// 获取游戏场，对应房间信息
	GamePlayground(ctx context.Context, in *GamePlaygroundArgs, opts ...grpc.CallOption) (*GamePlaygroundRes, error)
}

type centreServiceClient struct {
	cc *grpc.ClientConn
}

func NewCentreServiceClient(cc *grpc.ClientConn) CentreServiceClient {
	return &centreServiceClient{cc}
}

func (c *centreServiceClient) GameList(ctx context.Context, in *GameListArgs, opts ...grpc.CallOption) (*GameListRes, error) {
	out := new(GameListRes)
	err := grpc.Invoke(ctx, "/proto.CentreService/GameList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *centreServiceClient) GamePlayground(ctx context.Context, in *GamePlaygroundArgs, opts ...grpc.CallOption) (*GamePlaygroundRes, error) {
	out := new(GamePlaygroundRes)
	err := grpc.Invoke(ctx, "/proto.CentreService/GamePlayground", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CentreService service

type CentreServiceServer interface {
	// 获取游戏列表
	GameList(context.Context, *GameListArgs) (*GameListRes, error)
	// 获取游戏场，对应房间信息
	GamePlayground(context.Context, *GamePlaygroundArgs) (*GamePlaygroundRes, error)
}

func RegisterCentreServiceServer(s *grpc.Server, srv CentreServiceServer) {
	s.RegisterService(&_CentreService_serviceDesc, srv)
}

func _CentreService_GameList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameListArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CentreServiceServer).GameList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CentreService/GameList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CentreServiceServer).GameList(ctx, req.(*GameListArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _CentreService_GamePlayground_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GamePlaygroundArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CentreServiceServer).GamePlayground(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CentreService/GamePlayground",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CentreServiceServer).GamePlayground(ctx, req.(*GamePlaygroundArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _CentreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CentreService",
	HandlerType: (*CentreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GameList",
			Handler:    _CentreService_GameList_Handler,
		},
		{
			MethodName: "GamePlayground",
			Handler:    _CentreService_GamePlayground_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "centre.proto",
}

func init() { proto1.RegisterFile("centre.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x4e, 0xcd, 0x2b,
	0x29, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x7c, 0x5c, 0x3c,
	0xee, 0x89, 0xb9, 0xa9, 0x3e, 0x99, 0xc5, 0x25, 0x8e, 0x45, 0xe9, 0xc5, 0x4a, 0xbc, 0x5c, 0xdc,
	0x30, 0x7e, 0x50, 0x6a, 0xb1, 0x92, 0x08, 0x97, 0x10, 0x88, 0x1b, 0x90, 0x93, 0x58, 0x99, 0x5e,
	0x94, 0x5f, 0x9a, 0x97, 0x02, 0x56, 0x24, 0xcc, 0x25, 0x88, 0x2a, 0x1a, 0x94, 0x5a, 0x6c, 0xd4,
	0xcf, 0xc8, 0xc5, 0xeb, 0x0c, 0xb6, 0x21, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0xc8, 0x94,
	0x8b, 0x03, 0x66, 0x96, 0x90, 0x30, 0xc4, 0x5a, 0x3d, 0x64, 0xcb, 0xa4, 0x84, 0xd0, 0x04, 0x41,
	0x36, 0x32, 0x08, 0xb9, 0x73, 0xf1, 0xa1, 0x9a, 0x2e, 0x24, 0x89, 0xa4, 0x0e, 0xd5, 0x29, 0x52,
	0x12, 0x58, 0xa5, 0xc0, 0x06, 0x25, 0xb1, 0x81, 0xa5, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x6d, 0xf2, 0xee, 0x2d, 0xf9, 0x00, 0x00, 0x00,
}
