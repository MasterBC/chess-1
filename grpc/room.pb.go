// Code generated by protoc-gen-go. DO NOT EDIT.
// source: room.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RoomInfoArgs struct {
}

func (m *RoomInfoArgs) Reset()                    { *m = RoomInfoArgs{} }
func (m *RoomInfoArgs) String() string            { return proto1.CompactTextString(m) }
func (*RoomInfoArgs) ProtoMessage()               {}
func (*RoomInfoArgs) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type RoomInfoRes struct {
}

func (m *RoomInfoRes) Reset()                    { *m = RoomInfoRes{} }
func (m *RoomInfoRes) String() string            { return proto1.CompactTextString(m) }
func (*RoomInfoRes) ProtoMessage()               {}
func (*RoomInfoRes) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func init() {
	proto1.RegisterType((*RoomInfoArgs)(nil), "proto.RoomInfoArgs")
	proto1.RegisterType((*RoomInfoRes)(nil), "proto.RoomInfoRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RoomService service

type RoomServiceClient interface {
	// 获取房间信息
	RoomInfo(ctx context.Context, in *RoomInfoArgs, opts ...grpc.CallOption) (*RoomInfoRes, error)
}

type roomServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomServiceClient(cc *grpc.ClientConn) RoomServiceClient {
	return &roomServiceClient{cc}
}

func (c *roomServiceClient) RoomInfo(ctx context.Context, in *RoomInfoArgs, opts ...grpc.CallOption) (*RoomInfoRes, error) {
	out := new(RoomInfoRes)
	err := grpc.Invoke(ctx, "/proto.RoomService/RoomInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RoomService service

type RoomServiceServer interface {
	// 获取房间信息
	RoomInfo(context.Context, *RoomInfoArgs) (*RoomInfoRes, error)
}

func RegisterRoomServiceServer(s *grpc.Server, srv RoomServiceServer) {
	s.RegisterService(&_RoomService_serviceDesc, srv)
}

func _RoomService_RoomInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomInfoArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).RoomInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RoomService/RoomInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).RoomInfo(ctx, req.(*RoomInfoArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RoomService",
	HandlerType: (*RoomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RoomInfo",
			Handler:    _RoomService_RoomInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "room.proto",
}

func init() { proto1.RegisterFile("room.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 102 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xca, 0xcf, 0xcf,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x7c, 0x5c, 0x3c, 0x41, 0xf9,
	0xf9, 0xb9, 0x9e, 0x79, 0x69, 0xf9, 0x8e, 0x45, 0xe9, 0xc5, 0x4a, 0xbc, 0x5c, 0xdc, 0x30, 0x7e,
	0x50, 0x6a, 0xb1, 0x91, 0x0b, 0x84, 0x1b, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xca,
	0xc5, 0x01, 0x93, 0x15, 0x12, 0x86, 0x18, 0xa4, 0x87, 0xac, 0x5d, 0x4a, 0x08, 0x4d, 0x30, 0x28,
	0xb5, 0x58, 0x89, 0x21, 0x89, 0x0d, 0x2c, 0x68, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xca,
	0xa0, 0x3d, 0x80, 0x00, 0x00, 0x00,
}
